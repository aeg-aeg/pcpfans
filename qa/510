#!/bin/sh
# PCP QA Test No. 510
# pmlogger -Dall calls __pmDumpResult() which fails for usage with
# pmlc control requests
#
# Copyright (c) 2012 Ken McDonell.  All Rights Reserved.
#

seq=`basename $0`
echo "QA output created by $seq"

# get standard environment, filters and checks
. ./common.product
. ./common.filter
. ./common.check

status=1
$sudo rm -rf $tmp.* $seq.full
trap "_cleanup" 0 1 2 3 15
needclean=true

_cleanup()
{
    if $needclean
    then
	_restore_config $PCP_PMLOGGERCONTROL_PATH
	needclean=false
	_restore_primary_logger
	$sudo $PCP_RC_DIR/pcp restart | _filter_pcp_start
	_wait_for_pmcd
    fi
    $sudo rm -f $tmp.*
    exit $status
}

_filter()
{
    sed \
	-e 's/Version [0-9].*/Version VERSION/'
}

# stop primary logger, add -Dall to config file and restart pmlogger
$sudo $PCP_RC_DIR/pcp stop >/dev/null 2>&1
sed -e '/^LOCALHOSTNAME/s/$/ -Dall/' <$PCP_PMLOGGERCONTROL_PATH >$tmp.control
_save_config $PCP_PMLOGGERCONTROL_PATH
$sudo cp $tmp.control $PCP_PMLOGGERCONTROL_PATH
_writable_primary_logger
$sudo $PCP_RC_DIR/pcp restart | _filter_pcp_start
_wait_for_pmcd

# real QA test starts here
pmlc -ie <<End-of-File | _filter
connect primary
query sample.event
log mandatory on once sample.event.records
query sample.event
End-of-File

# success, all done
status=0
exit
